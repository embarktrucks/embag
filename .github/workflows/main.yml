# This is a flow that builds binary wheels for PyPI
name: pypi_build

# Trigger the workflow on push or pull request events master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  manylinux_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build manylinux image
        run: |
          docker build -t embag --build-arg BAZEL_VERSION=$(cat .bazelversion) .
          docker run -v $PWD:/tmp/cp --rm -t embag bash -c "cp /tmp/out/*.whl /tmp/cp"

      - name: Upload .whl artifacts
        uses: actions/upload-artifact@v2.1.4
        with:
          name: python_wheels
          path: embag-*.whl

  debian_package_build:
    runs-on: ubuntu-20.04 # Need to use Python3.8 for pybind11 (Ubuntu 22.04 uses Python3.10)
    steps:
      - uses: actions/checkout@v2
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: ${{ runner.os }}-bazel
      - name: Build Debian package
        run: bazel build -c opt //lib:embag-debian
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v2.1.4
        with:
          name: debian_packages
          path: bazel-bin/lib/embag_*.deb

  macos_build:
    runs-on: macos-10.15
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9, 3.10, 3.11 ]
    name: Mac build for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "/Users/runner/.cache/bazel"
          key: ${{ runner.os }}-${{ matrix.python-version }}-bazel
      - run: pip_package/macos_build.sh

      - name: Upload .whl artifacts
        uses: actions/upload-artifact@v2.1.4
        with:
          name: python_wheels
          path: /tmp/out/embag-*.whl


